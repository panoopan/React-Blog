{"version":3,"sources":["context.js","utils.js","WebAPI.js","customHooks/useUsers.js","components/Navbar/Navbar.js","components/Post/Post.js","components/Paginator/Paginator.js","customHooks/useGetPosts.js","customHooks/usePaginate.js","pages/HomePage/HomePage.js","components/LoginForm/LoginForm.js","pages/RegisterPage/RegisterPage.js","pages/LoginPage/LoginPage.js","images/banner.jpeg","images/logo.jpeg","pages/AboutPage/AboutPage.js","pages/AdminPage/AdminPage.js","pages/PostPage/PostPage.js","customHooks/useEditPost.js","components/PostForm/PostForm.js","pages/NewPostPage/NewPostPage.js","pages/EditPostPage/EditPostPage.js","pages/AuthorPage/AuthorPage.js","components/App/App.js","index.js"],"names":["AuthContext","createContext","LoadingContext","PageContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPost","id","fetch","then","res","json","getMe","headers","authorization","useUsers","setUser","useContext","useState","nickname","setNickname","username","setUsername","password","setPassword","errorMessage","setErrorMessage","isLoading","setIsLoading","history","useHistory","match","useRouteMatch","handleNicknameInput","useCallback","e","target","value","handleUsernameInput","handlePasswordInput","handleSubmit","preventDefault","path","method","body","JSON","stringify","register","data","ok","message","response","push","login","handleLogout","Container","styled","div","Brand","Link","Wrapper","NavbarList","Nav","props","$active","Navbar","location","useLocation","user","to","pathname","onClick","Title","Info","AuthorLink","ButtonWrapper","Button","button","Post","post","title","Date","createdAt","toLocaleString","hour12","memo","Page","Paginator","page","handleButtonClick","useGetPosts","setPost","posts","setPosts","useParams","author","setAuthor","useEffect","getAdminPosts","getPosts","getUserPosts","usePaginate","totalPage","setTotalPage","setPage","totalPost","Number","length","Math","ceil","Root","PostList","HomePage","useGetPost","map","Subtitle","Form","form","Input","input","ErrorMessage","LoginForm","state","handle","onSubmit","type","onChange","RegisterPage","LoginPage","Background","banner","InfoBackground","InfoContent","Avatar","img","AboutPage","src","logo","AdminPage","PostContainer","PostTop","PostTitle","PostInfo","PostBody","PostPage","goBack","useEditPost","setTitle","setBody","handleTitleInput","handleBodyInput","editPost","newPost","Content","textarea","PostForm","rows","NewPostPage","EditPostPage","AuthorPage","App","Provider","exact","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b97025eb.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\nexport const LoadingContext = createContext(null);\nexport const PageContext = createContext(null);\n","const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  return localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n\nexport const checkLogin = (user) => {\n  return user;\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = (page) => {\n  return fetch(\n    `${BASE_URL}/posts?_expand=user&_sort=createdAt&_order=desc&_page=${page}&_limit=5`\n  ).then((res) => res.json());\n};\n\nexport const getUserPosts = (id) => {\n  return fetch(\n    `${BASE_URL}/posts?userId=${id}&_expand=user&_sort=createdAt&_order=desc`\n  ).then((res) => res.json());\n};\n\nexport const getAdminPosts = (user) => {\n  return fetch(\n    `${BASE_URL}/posts?userId=${user.id}&_expand=user&_sort=createdAt&_order=desc`\n  ).then((res) => res.json());\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}?_expand=user`).then((res) =>\n    res.json()\n  );\n};\n\nexport const countTotalPosts = () => {\n  return fetch(`${BASE_URL}/posts`).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const newPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deletePost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n  }).then((res) => res.json());\n};\n\nexport const editPost = (id, title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n","import { useState, useContext, useCallback } from \"react\";\nimport { register, login, getMe } from \"../WebAPI\";\nimport { setAuthToken } from \"../utils\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context\";\n\nfunction useUsers() {\n  const { setUser } = useContext(AuthContext);\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"Lidemy\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setErrorMessage(null);\n\n    if (isLoading) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    if (match.path === \"/register\") {\n      register(nickname, username, password).then((data) => {\n        setIsLoading(false);\n        if (data.ok === 0) {\n          return setErrorMessage(data.message);\n        }\n\n        setAuthToken(data.token);\n\n        getMe().then((response) => {\n          if (response.ok !== 1) {\n            setAuthToken(null);\n            return setErrorMessage(response.message);\n          }\n          setUser(response.data);\n          history.push(\"/\");\n        });\n      });\n    }\n\n    if (match.path === \"/login\") {\n      login(username, password).then((data) => {\n        setIsLoading(false);\n        if (data.ok === 0) {\n          return setErrorMessage(data.message);\n        }\n\n        setAuthToken(data.token);\n\n        getMe().then((response) => {\n          if (response.ok !== 1) {\n            setAuthToken(null);\n            return setErrorMessage(response.message);\n          }\n          setUser(response.data);\n          history.push(\"/\");\n        });\n      });\n    }\n  };\n\n  const handleNicknameInput = useCallback((e) => {\n    setNickname(e.target.value);\n  }, []);\n\n  const handleUsernameInput = useCallback((e) => {\n    setUsername(e.target.value);\n  }, []);\n\n  const handlePasswordInput = useCallback((e) => {\n    setPassword(e.target.value);\n  }, []);\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (match.path !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return {\n    nickname,\n    username,\n    password,\n    errorMessage,\n\n    handleSubmit,\n    handleNicknameInput,\n    handleUsernameInput,\n    handlePasswordInput,\n    handleLogout,\n  };\n}\n\nexport default useUsers;\n","import styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext, LoadingContext } from \"../../context\";\nimport useUsers from \"../../customHooks/useUsers\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: white;\n  z-index: 2;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\nconst Brand = styled(Link)`\n  font-size: 26px;\n  font-wight: bold;\n  color: black;\n  text-decoration: none;\n  padding: 0 12px;\n  flex-shrink: 0;\n\n  span {\n    color: #fc633a;\n  }\n\n  @media screen and (max-width: 768px) {\n    padding: 12px 0;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  flex-wrap: wrap;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Nav = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-size: 18px;\n  padding: 12px;\n\n  &:hover {\n    background: #fc633a;\n    color: white;\n  }\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: #fc633a;\n    color: white;\n\n  `}\n`;\n\nfunction Navbar() {\n  const location = useLocation();\n  const { user } = useContext(AuthContext);\n  const { isLoading } = useContext(LoadingContext);\n  const { handleLogout } = useUsers();\n\n  return (\n    <Container>\n      <Brand to={\"/\"}>\n        <span>Orange</span> & Black\n      </Brand>\n\n      <Wrapper>\n        <NavbarList>\n          <Nav to={\"/\"} $active={location.pathname === \"/\"}>\n            Home\n          </Nav>\n          <Nav to={\"/about\"} $active={location.pathname === \"/about\"}>\n            About\n          </Nav>\n          {user && (\n            <Nav to={\"/new-post\"} $active={location.pathname === \"/new-post\"}>\n              New Post\n            </Nav>\n          )}\n          {user && (\n            <Nav to={\"/admin\"} $active={location.pathname === \"/admin\"}>\n              Manage\n            </Nav>\n          )}\n        </NavbarList>\n\n        {!isLoading && (\n          <NavbarList>\n            {!user && (\n              <Nav to={\"/login\"} $active={location.pathname === \"/login\"}>\n                Login\n              </Nav>\n            )}\n            {!user && (\n              <Nav to={\"/register\"} $active={location.pathname === \"/register\"}>\n                Sign Up\n              </Nav>\n            )}\n            {user && (\n              <Nav to={\"\"} onClick={handleLogout}>\n                Lougout\n              </Nav>\n            )}\n          </NavbarList>\n        )}\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default Navbar;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { deletePost } from \"../../WebAPI\";\nimport React, { memo } from \"react\";\n\nconst Container = styled.div`\n  border-bottom: 1px solid #ff8100;\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n\n  div {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-break: break-all;\n  }\n\n  &:hover {\n    background: #ff81003b;\n  }\n`;\n\nconst Wrapper = styled.div``;\n\nconst Title = styled(Link)`\n  font-size: 22px;\n  color: white;\n  text-decoration: none;\n`;\n\nconst Info = styled.div`\n  margin-top: 12px;\n  font-size: 16px;\n`;\n\nconst AuthorLink = styled(Link)`\n  color: #ff8100;\n  font-size: 18px;\n`;\n\nconst ButtonWrapper = styled.div`\n  flex-shrink: 0;\n`;\n\nconst Button = styled.button`\n  padding: 8px 4px;\n  background: transparent;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n\n  &:hover {\n    background: #ff8100;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nfunction Post({ post }) {\n  const history = useHistory();\n  const location = useLocation();\n  return (\n    <Container>\n      <Wrapper>\n        <Title to={`/post/${post.id}`}>{post.title}</Title>\n        <Info>\n          posted by{\"   \"}\n          <AuthorLink to={`/author/${post.user.id}`}>\n            {post.user.nickname}\n          </AuthorLink>\n          {\"   \"}|{\" \"}\n          {new Date(post.createdAt).toLocaleString(\"en\", { hour12: false })}\n        </Info>\n      </Wrapper>\n      {location.pathname === \"/admin\" && (\n        <ButtonWrapper>\n          <Button\n            onClick={() => {\n              deletePost(post.id);\n            }}\n          >\n            Delete\n          </Button>{\" \"}\n          <Button\n            onClick={() => {\n              history.push(`/edit-post/${post.id}`);\n            }}\n          >\n            Edit\n          </Button>\n        </ButtonWrapper>\n      )}\n    </Container>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default memo(Post);\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  padding: 12px;\n  background: transparent;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n\n  &:hover {\n    background: #ff8100;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nconst Page = styled.div`\n  display: inline-block;\n  margin: 0 20px;\n  background: #ff8100;\n  width: 25px;\n  height: 25px;\n  text-align: center;\n  border-radius: 50%;\n  color: white;\n`;\n\nfunction Paginator({ page, handleButtonClick }) {\n  return (\n    <Container>\n      <Button\n        onClick={() => {\n          handleButtonClick(\"First\");\n        }}\n      >\n        First\n      </Button>\n      <Button\n        onClick={() => {\n          handleButtonClick(\"Prev\");\n        }}\n      >\n        Prev\n      </Button>\n\n      <Page>{page}</Page>\n\n      <Button\n        onClick={() => {\n          handleButtonClick(\"Next\");\n        }}\n      >\n        Next\n      </Button>\n      <Button\n        onClick={() => {\n          handleButtonClick(\"Last\");\n        }}\n      >\n        Last\n      </Button>\n    </Container>\n  );\n}\n\nPaginator.propTypes = {\n  page: PropTypes.number,\n  handleButtonClick: PropTypes.func,\n};\n\nexport default memo(Paginator);\n","import { useState, useEffect, useContext } from \"react\";\nimport { useRouteMatch, useHistory, useParams } from \"react-router-dom\";\nimport { getAdminPosts, getPosts, getUserPosts, getPost } from \"../WebAPI\";\nimport { AuthContext, PageContext } from \"../context\";\nimport { checkLogin } from \"../utils\";\n\nfunction useGetPosts() {\n  const [post, setPost] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const { user } = useContext(AuthContext);\n  const { page } = useContext(PageContext);\n  const history = useHistory();\n  const match = useRouteMatch();\n  const { id } = useParams();\n  const [author, setAuthor] = useState();\n\n  useEffect(() => {\n    if (match.path === \"/admin\") {\n      if (checkLogin(user)) {\n        getAdminPosts(user).then((posts) => {\n          setPosts(posts);\n        });\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }, [match, user, posts, history]);\n\n  useEffect(() => {\n    if (match.path === \"/\") {\n      getPosts(page).then((posts) => {\n        setPosts(posts);\n      });\n    }\n  }, [match, page]);\n\n  useEffect(() => {\n    if (match.path === \"/author/:id\") {\n      getUserPosts(id).then((posts) => {\n        setPosts(posts);\n        setAuthor(posts[0].user.nickname);\n      });\n    }\n  }, [match, id]);\n\n  useEffect(() => {\n    if (match.path === \"/post/:id\") {\n      getPost(id).then((data) => {\n        setPost(data);\n      });\n    }\n  }, [match, id]);\n\n  return {\n    post,\n    posts,\n    author,\n  };\n}\n\nexport default useGetPosts;\n","import { useState, useEffect, useCallback, useContext } from \"react\";\nimport { countTotalPosts } from \"../WebAPI\";\nimport { PageContext } from \"../context\";\n\nfunction usePaginate() {\n  const [totalPage, setTotalPage] = useState();\n  const { page, setPage } = useContext(PageContext);\n\n  useEffect(() => {\n    countTotalPosts().then((res) => {\n      const totalPost = Number(res.length);\n      setTotalPage(Math.ceil(totalPost / 5));\n    });\n  }, [totalPage]);\n\n  const handleButtonClick = useCallback(\n    (button) => {\n      if (button === \"First\") {\n        return setPage(1);\n      }\n\n      if (button === \"Prev\" && page > 1) {\n        return setPage(page - 1);\n      }\n\n      if (button === \"Next\" && page < totalPage) {\n        return setPage(page + 1);\n      }\n\n      if (button === \"Last\") {\n        return setPage(totalPage);\n      }\n    },\n    [page, setPage, totalPage]\n  );\n\n  return {\n    handleButtonClick,\n  };\n}\n\nexport default usePaginate;\n","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Post from \"../../components/Post\";\nimport Paginator from \"../../components/Paginator\";\nimport useGetPost from \"../../customHooks/useGetPosts\";\nimport usePaginate from \"../../customHooks/usePaginate\";\nimport { PageContext } from \"../../context\";\n\nconst Root = styled.div``;\n\nconst PostList = styled.div`\n  width: 60%;\n  margin: 60px auto;\n  max-height: 80vh;\n  overflow: scroll;\n\n  @media screen and (max-width: 768px) {\n    margin: 100px auto 60px auto;\n    width: 80%;\n  }\n`;\n\nfunction HomePage() {\n  const { posts } = useGetPost();\n  const { handleButtonClick } = usePaginate();\n  const { page } = useContext(PageContext);\n\n  return (\n    <Root>\n      <PostList>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} />\n        ))}\n      </PostList>\n      <Paginator page={page} handleButtonClick={handleButtonClick} />\n    </Root>\n  );\n}\n\nexport default HomePage;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport React, { memo } from \"react\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin-top: 80px;\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  font-size: 40px;\n  color: #ff8100;\n`;\n\nconst Subtitle = styled.div`\n  text-align: center;\n  font-size: 16px;\n  margin: 20px 0;\n`;\n\nconst Form = styled.form`\n  border: solid 1px #ff8100;\n  padding: 20px 40px 60px 40px;\n  width: 300px;\n  margin: 30px auto;\n  text-align: center;\n  font-size: 18px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 16px;\n  padding: 5px;\n  margin: 16px 0;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-bottom: 12px;\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  background: #ff8100;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n  float: right;\n  width: 100%;\n\n  &:hover {\n    background: #ff8100;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nfunction LoginForm({ state, handle }) {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <Title>{location.pathname === \"/register\" ? \"Sign Up\" : \"Login\"}</Title>\n      <Subtitle>\n        For testing, the password is set as default value 'Lidemy'.\n      </Subtitle>\n\n      <Form onSubmit={handle.handleSubmit}>\n        {location.pathname === \"/register\" && (\n          <div>\n            Nickname\n            <Input\n              type=\"text\"\n              value={state.nickname}\n              onChange={handle.handleNicknameInput}\n            />\n          </div>\n        )}\n\n        <div>\n          Username\n          <Input\n            type=\"text\"\n            value={state.username}\n            onChange={handle.handleUsernameInput}\n          />\n        </div>\n        <div>\n          Password\n          <Input\n            type=\"password\"\n            value={state.password}\n            onChange={handle.handlePasswordInput}\n          />\n        </div>\n        <ErrorMessage>{state.errorMessage}</ErrorMessage>\n        <Button>submit</Button>\n      </Form>\n    </Container>\n  );\n}\n\nLoginForm.propTypes = {\n  state: PropTypes.object,\n  handle: PropTypes.object,\n};\n\nexport default memo(LoginForm);\n","import LoginForm from \"../../components/LoginForm\";\nimport useUsers from \"../../customHooks/useUsers\";\n\nfunction RegisterPage() {\n  const {\n    nickname,\n    username,\n    password,\n    errorMessage,\n\n    handleSubmit,\n    handleNicknameInput,\n    handleUsernameInput,\n    handlePasswordInput,\n  } = useUsers();\n\n  const state = { nickname, username, password, errorMessage };\n  const handle = {\n    handleSubmit,\n    handleNicknameInput,\n    handleUsernameInput,\n    handlePasswordInput,\n  };\n\n  return <LoginForm state={state} handle={handle} />;\n}\n\nexport default RegisterPage;\n","import LoginForm from \"../../components/LoginForm\";\nimport useUsers from \"../../customHooks/useUsers\";\n\nfunction LoginPage() {\n  const {\n    username,\n    password,\n    errorMessage,\n\n    handleSubmit,\n    handleUsernameInput,\n    handlePasswordInput,\n  } = useUsers();\n\n  const state = { username, password, errorMessage };\n  const handle = { handleSubmit, handleUsernameInput, handlePasswordInput };\n\n  return <LoginForm state={state} handle={handle} />;\n}\n\nexport default LoginPage;\n","export default __webpack_public_path__ + \"static/media/banner.50d2ec5c.jpeg\";","export default __webpack_public_path__ + \"static/media/logo.02bae6b4.jpeg\";","import styled from \"styled-components\";\nimport banner from \"../../images/banner.jpeg\";\nimport logo from \"../../images/logo.jpeg\";\n\nconst Background = styled.div`\n  position: relative;\n  background-image: url(${banner});\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center;\n  background-size: cover;\n  height: calc(100vh - 100px);\n  width: 90%;\n  margin: auto;\n\n  @media screen and (max-width: 576px) {\n    height: 100vh;\n    margin: 100px auto 60px auto;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin: 100px auto 60px auto;\n  }\n`;\n\nconst InfoBackground = styled.div`\n  position: absolute;\n  max-width: 500px;\n  background: transparent;\n  top: 50%;\n  left: 40%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  font-family: \"Playfair Display\", serif;\n`;\n\nconst InfoContent = styled.div`\n  margin-top: 80px;\n  line-height: 2;\n  color: #440f00;\n  font-size: 20px;\n  text-align: center;\n\n  span {\n    font-weight: bold;\n  }\n\n  @media screen and (max-width: 576px) {\n    line-height: 1.5;\n    margin-top: 120px;\n  }\n`;\n\nconst Avatar = styled.img`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  position: absolute;\n  top: 0%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (max-width: 576px) {\n    margin: 50px 0;\n  }\n`;\n\nfunction AboutPage() {\n  return (\n    <Background>\n      <InfoBackground>\n        <Avatar src={logo} />\n        <InfoContent>\n          <span>Orange & Black</span> <br />\n          <span>Optimistic & Brave</span> <br />\n          <p>\n            We love when inspiring people share their stories on our site.{\" \"}\n            Although sharing and listening to stories makes us stop and reflect,\n            it can also lead to us thinking and acting differently.\n          </p>\n        </InfoContent>\n      </InfoBackground>\n    </Background>\n  );\n}\n\nexport default AboutPage;\n","import styled from \"styled-components\";\nimport Post from \"../../components/Post\";\nimport useGetPost from \"../../customHooks/useGetPosts\";\n\nconst Root = styled.div``;\n\nconst PostList = styled.div`\n  width: 60%;\n  margin: 30px auto;\n  max-height: 80vh;\n  overflow: scroll;\n\n  @media screen and (max-width: 768px) {\n    margin: 100px auto;\n    width: 80%;\n  }\n`;\n\nfunction AdminPage() {\n  const { posts } = useGetPost();\n\n  return (\n    <Root>\n      <PostList>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} />\n        ))}\n      </PostList>\n    </Root>\n  );\n}\n\nexport default AdminPage;\n","import styled from \"styled-components\";\nimport useGetPost from \"../../customHooks/useGetPosts\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Root = styled.div``;\n\nconst PostContainer = styled.div`\n  width: 50%;\n  margin: 100px auto;\n\n  @media screen and (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst PostTop = styled.div`\n  border-bottom: 1px solid #ff8100;\n  text-align: left;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 24px;\n  white-space: pre-wrap;\n  word-break: break-all;\n  color: #ff8100;\n`;\n\nconst PostInfo = styled.div`\n  margin-top: 12px;\n`;\n\nconst PostBody = styled.div`\n  font-size: 18px;\n  margin-top: 30px;\n  max-height: 60vh;\n  white-space: pre-line;\n  overflow: scroll;\n  word-break: break-all;\n`;\n\nconst Button = styled.button`\n  padding: 12px;\n  background: #ff8100;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n  float: right;\n\n  &:hover {\n    background: #ff8100;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nfunction PostPage() {\n  const { post } = useGetPost();\n  const history = useHistory();\n\n  return (\n    <Root>\n      <PostContainer>\n        <PostTop>\n          <PostTitle>{post.title}</PostTitle>\n          <PostInfo>\n            {new Date(post.createdAt).toLocaleString(\"en\", { hour12: false })}\n          </PostInfo>\n        </PostTop>\n        <PostBody>{post.body}</PostBody>\n        <Button\n          onClick={() => {\n            history.goBack();\n          }}\n        >\n          Back\n        </Button>\n      </PostContainer>\n    </Root>\n  );\n}\n\nexport default PostPage;\n","import { useState, useContext, useEffect, useCallback } from \"react\";\nimport { newPost, editPost, getPost } from \"../WebAPI\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context\";\nimport { useParams } from \"react-router-dom\";\nimport { checkLogin } from \"../utils\";\n\nfunction useEditPost() {\n  const { id } = useParams();\n  const { user } = useContext(AuthContext);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!checkLogin(user)) {\n      history.push(\"/\");\n    }\n\n    if (id) {\n      getPost(id).then((post) => {\n        setTitle(post.title);\n        setBody(post.body);\n      });\n    }\n  }, [id, history, user]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setErrorMessage(null);\n\n    if (isLoading) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    if (id) {\n      editPost(id, title, body).then((data) => {\n        setIsLoading(false);\n        if (data.ok === 0) {\n          return setErrorMessage(data.message);\n        }\n\n        history.push(\"/admin\");\n      });\n    } else {\n      newPost(title, body).then((data) => {\n        setIsLoading(false);\n        if (data.ok === 0) {\n          return setErrorMessage(data.message);\n        }\n\n        history.push(\"/\");\n      });\n    }\n  };\n\n  const handleTitleInput = useCallback((e) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleBodyInput = useCallback((e) => {\n    setBody(e.target.value);\n  }, []);\n\n  return {\n    title,\n    body,\n    errorMessage,\n\n    handleSubmit,\n    handleTitleInput,\n    handleBodyInput,\n  };\n}\n\nexport default useEditPost;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nconst Form = styled.form`\n  border: solid 3px #ff8100;\n  padding: 20px 40px 60px 40px;\n  max-width: 600px;\n  margin: 30px auto;\n  font-size: 20px;\n\n  @media screen and (max-width: 768px) {\n    margin: 100px auto;\n    overflow: hidden;\n  }\n`;\n\nconst Input = styled.input`\n  margin-bottom: 12px;\n  width: 100%;\n  font-size: 16px;\n  padding: 10px;\n`;\n\nconst Content = styled.textarea`\n  width: 100%;\n  font-size: 16px;\n  padding: 12px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-bottom: 12px;\n`;\n\nconst Button = styled.button`\n  padding: 12px;\n  background: #ff8100;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n  float: right;\n\n  &:hover {\n    background: #ff8100;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nfunction PostForm({ state, handle }) {\n  return (\n    <Form onSubmit={handle.handleSubmit}>\n      <div>\n        Title:{\" \"}\n        <Input\n          type=\"text\"\n          value={state.title}\n          onChange={handle.handleTitleInput}\n        />\n      </div>\n      <div>\n        Content:{\" \"}\n        <Content\n          rows=\"20\"\n          value={state.body}\n          onChange={handle.handleBodyInput}\n        />\n      </div>\n      <ErrorMessage>{state.errorMessage}</ErrorMessage>\n      <Button>submit</Button>\n    </Form>\n  );\n}\n\nPostForm.propTypes = {\n  state: PropTypes.object,\n  handle: PropTypes.object,\n};\n\nexport default memo(PostForm);\n","import useEditPost from \"../../customHooks/useEditPost\";\nimport PostForm from \"../../components/PostForm\";\n\nfunction NewPostPage() {\n  const {\n    title,\n    body,\n    errorMessage,\n\n    handleSubmit,\n    handleTitleInput,\n    handleBodyInput,\n  } = useEditPost();\n\n  const state = { title, body, errorMessage };\n  const handle = { handleSubmit, handleTitleInput, handleBodyInput };\n\n  return <PostForm state={state} handle={handle} />;\n}\n\nexport default NewPostPage;\n","import useEditPost from \"../../customHooks/useEditPost\";\nimport PostForm from \"../../components/PostForm\";\n\nfunction EditPostPage() {\n  const {\n    title,\n    body,\n    errorMessage,\n\n    handleSubmit,\n    handleTitleInput,\n    handleBodyInput,\n  } = useEditPost();\n\n  const state = { title, body, errorMessage };\n  const handle = { handleSubmit, handleTitleInput, handleBodyInput };\n\n  return <PostForm state={state} handle={handle} />;\n}\n\nexport default EditPostPage;\n","import styled from \"styled-components\";\nimport Post from \"../../components/Post\";\nimport useGetPost from \"../../customHooks/useGetPosts\";\n\nconst Root = styled.div``;\n\nconst PostList = styled.div`\n  width: 60%;\n  margin: 30px auto;\n  max-height: 80vh;\n  overflow: scroll;\n\n  @media screen and (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  font-size: 28px;\n  margin: 50px 0;\n\n  span {\n    font-weight: bold;\n    color: #ff8100;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin: 100px 0 50px 0;\n  }\n`;\n\nfunction AuthorPage() {\n  const { posts, author } = useGetPost();\n\n  return (\n    <Root>\n      <Title>\n        <span>{author}</span> 的所有文章\n      </Title>\n      <PostList>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} />\n        ))}\n      </PostList>\n    </Root>\n  );\n}\n\nexport default AuthorPage;\n","import styled from \"styled-components\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"../Navbar\";\nimport HomePage from \"../../pages/HomePage\";\nimport RegisterPage from \"../../pages/RegisterPage\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport AboutPage from \"../../pages/AboutPage\";\nimport AdminPage from \"../../pages/AdminPage\";\nimport PostPage from \"../../pages/PostPage\";\nimport NewPostPage from \"../../pages/NewPostPage\";\nimport EditPostPage from \"../../pages/EditPostPage\";\nimport AuthorPage from \"../../pages/AuthorPage\";\n\nimport { useState, useEffect } from \"react\";\nimport { AuthContext, LoadingContext, PageContext } from \"../../context\";\nimport { getMe } from \"../../WebAPI\";\nimport { getAuthToken } from \"../../utils\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (getAuthToken()) {\n      getMe().then((response) => {\n        setIsLoading(false);\n        if (response.ok) {\n          setUser(response.data);\n        }\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\n        <PageContext.Provider value={{ page, setPage }}>\n          <Root>\n            <Router>\n              <Navbar />\n              <Switch>\n                <Route exact path=\"/\">\n                  <HomePage />\n                </Route>\n                <Route exact path=\"/register\">\n                  <RegisterPage />\n                </Route>\n                <Route path=\"/login\">\n                  <LoginPage />\n                </Route>\n                <Route path=\"/post/:id\">\n                  <PostPage />\n                </Route>\n                <Route path=\"/new-post\">\n                  <NewPostPage />\n                </Route>\n                <Route path=\"/edit-post/:id\">\n                  <EditPostPage />\n                </Route>\n                <Route path=\"/about\">\n                  <AboutPage />\n                </Route>\n                <Route path=\"/admin\">\n                  <AdminPage />\n                </Route>\n                <Route path=\"/author/:id\">\n                  <AuthorPage />\n                </Route>\n              </Switch>\n            </Router>\n          </Root>\n        </PageContext.Provider>\n      </LoadingContext.Provider>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nconst Root = styled.div``;\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family:  \"Ubuntu\", sans-serif;\n    background: black;\n    color: white;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nReactDOM.render(\n  <Root>\n    <GlobalStyle />\n    <App />\n  </Root>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}