{"version":3,"sources":["context.js","utils.js","WebAPI.js","customHooks/useLogin.js","components/Navbar/Navbar.js","components/Post/Post.js","components/Paginator/Paginator.js","customHooks/useGetPosts.js","customHooks/usePaginate.js","pages/HomePage/HomePage.js","components/LoginForm/LoginForm.js","customHooks/useRegister.js","pages/RegisterPage/RegisterPage.js","pages/LoginPage/LoginPage.js","images/banner.jpeg","images/logo.jpeg","pages/AboutPage/AboutPage.js","pages/AdminPage/AdminPage.js","customHooks/useComments.js","components/CommentForm/CommentForm.js","components/Comment/Comment.js","pages/PostPage/PostPage.js","customHooks/useAddPost.js","components/PostForm/PostForm.js","pages/NewPostPage/NewPostPage.js","customHooks/useEditPost.js","pages/EditPostPage/EditPostPage.js","pages/AuthorPage/AuthorPage.js","components/App/App.js","index.js"],"names":["AuthContext","createContext","LoadingContext","PageContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPost","id","fetch","then","res","json","getMe","headers","authorization","useLogin","setUser","useContext","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","isLoading","setIsLoading","history","useHistory","match","useRouteMatch","handleUsernameInput","useCallback","e","target","value","handlePasswordInput","handleSubmit","preventDefault","method","body","JSON","stringify","login","data","ok","message","response","push","handleLogout","path","Container","styled","div","Brand","Link","Wrapper","NavbarList","Nav","props","$active","Navbar","location","useLocation","user","to","pathname","onClick","Title","Info","AuthorLink","ButtonWrapper","Button","button","Post","post","title","nickname","Date","createdAt","toLocaleString","hour12","memo","Page","Paginator","page","handleButtonClick","useGetPosts","setPost","posts","setPosts","useParams","author","setAuthor","useEffect","getAdminPosts","getPosts","getUserPosts","usePaginate","totalPage","setTotalPage","setPage","totalPost","Number","length","Math","ceil","Root","PostList","HomePage","useGetPost","map","Subtitle","Form","form","Input","input","ErrorMessage","LoginForm","state","handle","onSubmit","type","onChange","handleNicknameInput","useRegister","setNickname","register","RegisterPage","LoginPage","Background","banner","InfoBackground","InfoContent","Avatar","img","AboutPage","src","logo","AdminPage","useComments","setBody","comments","setcomments","getComments","handleBodyInput","addComment","Content","textarea","attrs","placeholder","CommentForm","rows","Head","Author","Time","Body","Comment","comment","PostTop","PostTitle","PostInfo","PostBody","CommentWrapper","CommentTitle","h1","CommentList","PostPage","goBack","useAddPost","setTitle","handleTitleInput","newPost","PostForm","NewPostPage","useEditPost","editPost","EditPostPage","AuthorPage","App","Provider","exact","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f14f943a.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\nexport const LoadingContext = createContext(null);\nexport const PageContext = createContext(null);\n","const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  return localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n\nexport const checkLogin = (user) => {\n  return user;\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = (page) => {\n  return fetch(\n    `${BASE_URL}/posts?_expand=user&_sort=createdAt&_order=desc&_page=${page}&_limit=5`\n  ).then((res) => res.json());\n};\n\nexport const getUserPosts = (id) => {\n  return fetch(\n    `${BASE_URL}/posts?userId=${id}&_expand=user&_sort=createdAt&_order=desc`\n  ).then((res) => res.json());\n};\n\nexport const getAdminPosts = (user) => {\n  return fetch(\n    `${BASE_URL}/posts?userId=${user.id}&_expand=user&_sort=createdAt&_order=desc`\n  ).then((res) => res.json());\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}?_expand=user`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getTotalPosts = () => {\n  return fetch(`${BASE_URL}/posts`).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const newPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deletePost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n  }).then((res) => res.json());\n};\n\nexport const editPost = (id, title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getComments = (id) => {\n  return fetch(\n    `${BASE_URL}/posts/${id}/comments?_sort=createdAt&_order=desc`\n  ).then((res) => res.json());\n};\n\nexport const addComment = (id, nickname, body) => {\n  return fetch(`${BASE_URL}/posts/${id}/comments`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deleteComment = (id) => {\n  return fetch(`${BASE_URL}/comments/${id}/`, {\n    method: \"DELETE\",\n  }).then((res) => res.json());\n};\n","import { useState, useContext, useCallback } from \"react\";\nimport { login, getMe } from \"../WebAPI\";\nimport { setAuthToken } from \"../utils\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context\";\n\nfunction useLogin() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"Lidemy\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setErrorMessage(null);\n\n    if (isLoading) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    login(username, password).then((data) => {\n      setIsLoading(false);\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.message);\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  const handleUsernameInput = useCallback((e) => {\n    setUsername(e.target.value);\n  }, []);\n\n  const handlePasswordInput = useCallback((e) => {\n    setPassword(e.target.value);\n  }, []);\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (match.path !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return {\n    username,\n    password,\n    errorMessage,\n\n    handleSubmit,\n    handleUsernameInput,\n    handlePasswordInput,\n    handleLogout,\n  };\n}\n\nexport default useLogin;\n","import styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext, LoadingContext } from \"../../context\";\nimport useLogin from \"../../customHooks/useLogin\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: white;\n  z-index: 2;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\nconst Brand = styled(Link)`\n  font-size: 26px;\n  font-wight: bold;\n  color: black;\n  text-decoration: none;\n  padding: 0 12px;\n  flex-shrink: 0;\n\n  span {\n    color: #fc633a;\n  }\n\n  @media screen and (max-width: 768px) {\n    padding: 12px 0;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  flex-wrap: wrap;\n\n  @media screen and (max-width: 576px) {\n    justify-content: center;\n  }\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Nav = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-size: 18px;\n  padding: 12px;\n\n  &:hover {\n    background: #fc633a;\n    color: white;\n  }\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: #fc633a;\n    color: white;\n\n  `}\n`;\n\nfunction Navbar() {\n  const location = useLocation();\n  const { user } = useContext(AuthContext);\n  const { isLoading } = useContext(LoadingContext);\n  const { handleLogout } = useLogin();\n\n  return (\n    <Container>\n      <Brand to={\"/\"}>\n        <span>Orange</span> & Black\n      </Brand>\n\n      <Wrapper>\n        <NavbarList>\n          <Nav to={\"/\"} $active={location.pathname === \"/\"}>\n            Home\n          </Nav>\n          <Nav to={\"/about\"} $active={location.pathname === \"/about\"}>\n            About\n          </Nav>\n          {user && (\n            <Nav to={\"/admin\"} $active={location.pathname === \"/admin\"}>\n              Admin\n            </Nav>\n          )}\n        </NavbarList>\n\n        {!isLoading && (\n          <NavbarList>\n            {!user && (\n              <Nav to={\"/login\"} $active={location.pathname === \"/login\"}>\n                Login\n              </Nav>\n            )}\n            {!user && (\n              <Nav to={\"/register\"} $active={location.pathname === \"/register\"}>\n                Sign Up\n              </Nav>\n            )}\n            {user && (\n              <Nav to={\"\"} onClick={handleLogout}>\n                Lougout\n              </Nav>\n            )}\n          </NavbarList>\n        )}\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default Navbar;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { deletePost } from \"../../WebAPI\";\nimport React, { memo } from \"react\";\n\nconst Container = styled.div`\n  border-bottom: 1px solid #ff8100;\n  padding: 16px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  div {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-break: break-all;\n  }\n\n  &:hover {\n    background: #ff81003b;\n  }\n`;\n\nconst Wrapper = styled.div``;\n\nconst Title = styled(Link)`\n  font-size: 20px;\n  color: white;\n  text-decoration: none;\n`;\n\nconst Info = styled.div`\n  margin: 12px 0;\n  font-size: 16px;\n`;\n\nconst AuthorLink = styled(Link)`\n  color: #ff8100;\n  font-size: 18px;\n`;\n\nconst ButtonWrapper = styled.div`\n  flex-shrink: 0;\n`;\n\nconst Button = styled.button`\n  padding: 8px 4px;\n  background: transparent;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n\n  &:hover {\n    background: #ff8100;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nfunction Post({ post }) {\n  const history = useHistory();\n  const location = useLocation();\n  return (\n    <Container>\n      <Wrapper>\n        <Title to={`/post/${post.id}`}>{post.title}</Title>\n        <Info>\n          posted by{\"   \"}\n          <AuthorLink to={`/author/${post.user.id}`}>\n            {post.user.nickname}\n          </AuthorLink>\n          {\"   \"}|{\" \"}\n          {new Date(post.createdAt).toLocaleString(\"en\", { hour12: false })}\n        </Info>\n      </Wrapper>\n      {location.pathname === \"/admin\" && (\n        <ButtonWrapper>\n          <Button\n            onClick={() => {\n              deletePost(post.id);\n            }}\n          >\n            Delete\n          </Button>{\" \"}\n          <Button\n            onClick={() => {\n              history.push(`/edit-post/${post.id}`);\n            }}\n          >\n            Edit\n          </Button>\n        </ButtonWrapper>\n      )}\n    </Container>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default memo(Post);\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  padding: 12px;\n  background: transparent;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n\n  &:hover {\n    background: #ff8100;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nconst Page = styled.div`\n  display: inline-block;\n  margin: 0 20px;\n  background: #ff8100;\n  width: 25px;\n  height: 25px;\n  text-align: center;\n  border-radius: 50%;\n  color: white;\n`;\n\nfunction Paginator({ page, handleButtonClick }) {\n  return (\n    <Container>\n      <Button\n        onClick={() => {\n          handleButtonClick(\"First\");\n        }}\n      >\n        First\n      </Button>\n      <Button\n        onClick={() => {\n          handleButtonClick(\"Prev\");\n        }}\n      >\n        Prev\n      </Button>\n\n      <Page>{page}</Page>\n\n      <Button\n        onClick={() => {\n          handleButtonClick(\"Next\");\n        }}\n      >\n        Next\n      </Button>\n      <Button\n        onClick={() => {\n          handleButtonClick(\"Last\");\n        }}\n      >\n        Last\n      </Button>\n    </Container>\n  );\n}\n\nPaginator.propTypes = {\n  page: PropTypes.number,\n  handleButtonClick: PropTypes.func,\n};\n\nexport default memo(Paginator);\n","import { useState, useEffect, useContext } from \"react\";\nimport { useRouteMatch, useHistory, useParams } from \"react-router-dom\";\nimport { getAdminPosts, getPosts, getUserPosts, getPost } from \"../WebAPI\";\nimport { AuthContext, PageContext } from \"../context\";\nimport { checkLogin } from \"../utils\";\n\nfunction useGetPosts() {\n  const [post, setPost] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const { user } = useContext(AuthContext);\n  const { page } = useContext(PageContext);\n  const history = useHistory();\n  const match = useRouteMatch();\n  const { id } = useParams();\n  const [author, setAuthor] = useState();\n\n  useEffect(() => {\n    if (match.path === \"/admin\") {\n      if (checkLogin(user)) {\n        getAdminPosts(user).then((posts) => {\n          setPosts(posts);\n        });\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }, [match, user, posts, history]);\n\n  useEffect(() => {\n    if (match.path === \"/\") {\n      getPosts(page).then((posts) => {\n        setPosts(posts);\n      });\n    }\n  }, [match, page]);\n\n  useEffect(() => {\n    if (match.path === \"/author/:id\") {\n      getUserPosts(id).then((posts) => {\n        setPosts(posts);\n        setAuthor(posts[0].user.nickname);\n      });\n    }\n  }, [match, id]);\n\n  useEffect(() => {\n    if (match.path === \"/post/:id\") {\n      getPost(id).then((data) => {\n        setPost(data);\n      });\n    }\n  }, [match, id]);\n\n  return {\n    post,\n    posts,\n    author,\n  };\n}\n\nexport default useGetPosts;\n","import { useState, useEffect, useCallback, useContext } from \"react\";\nimport { getTotalPosts } from \"../WebAPI\";\nimport { PageContext } from \"../context\";\n\nfunction usePaginate() {\n  const [totalPage, setTotalPage] = useState();\n  const { page, setPage } = useContext(PageContext);\n\n  useEffect(() => {\n    getTotalPosts().then((res) => {\n      const totalPost = Number(res.length);\n      setTotalPage(Math.ceil(totalPost / 5));\n    });\n  }, [totalPage]);\n\n  const handleButtonClick = useCallback(\n    (button) => {\n      if (button === \"First\") {\n        return setPage(1);\n      }\n\n      if (button === \"Prev\" && page > 1) {\n        return setPage(page - 1);\n      }\n\n      if (button === \"Next\" && page < totalPage) {\n        return setPage(page + 1);\n      }\n\n      if (button === \"Last\") {\n        return setPage(totalPage);\n      }\n    },\n    [page, setPage, totalPage]\n  );\n\n  return {\n    handleButtonClick,\n  };\n}\n\nexport default usePaginate;\n","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Post from \"../../components/Post\";\nimport Paginator from \"../../components/Paginator\";\nimport useGetPost from \"../../customHooks/useGetPosts\";\nimport usePaginate from \"../../customHooks/usePaginate\";\nimport { PageContext } from \"../../context\";\n\nconst Root = styled.div``;\n\nconst PostList = styled.div`\n  width: 60%;\n  margin: 60px auto;\n  max-height: 80vh;\n  overflow: scroll;\n\n  @media screen and (max-width: 768px) {\n    margin: 100px auto 60px auto;\n    width: 80%;\n  }\n`;\n\nfunction HomePage() {\n  const { posts } = useGetPost();\n  const { handleButtonClick } = usePaginate();\n  const { page } = useContext(PageContext);\n\n  return (\n    <Root>\n      <PostList>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} />\n        ))}\n      </PostList>\n      <Paginator page={page} handleButtonClick={handleButtonClick} />\n    </Root>\n  );\n}\n\nexport default HomePage;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport React, { memo } from \"react\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (max-width: 576px) {\n    margin-top: 100px;\n  }\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  font-size: 40px;\n  color: #ff8100;\n`;\n\nconst Subtitle = styled.div`\n  text-align: center;\n  font-size: 16px;\n  margin: 20px 0;\n`;\n\nconst Form = styled.form`\n  border: solid 1px #ff8100;\n  padding: 20px 40px 60px 40px;\n  width: 300px;\n  margin: 30px auto;\n  text-align: center;\n  font-size: 18px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 16px;\n  padding: 5px;\n  margin: 16px 0;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-bottom: 12px;\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  background: #ff8100;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n  float: right;\n  width: 100%;\n\n  &:hover {\n    background: #ff8100;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nfunction LoginForm({ state, handle }) {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <Title>{location.pathname === \"/register\" ? \"Sign Up\" : \"Login\"}</Title>\n      <Subtitle>\n        For testing, the password is set as default value 'Lidemy'.\n      </Subtitle>\n\n      <Form onSubmit={handle.handleSubmit}>\n        {location.pathname === \"/register\" && (\n          <div>\n            Nickname\n            <Input\n              type=\"text\"\n              value={state.nickname}\n              onChange={handle.handleNicknameInput}\n            />\n          </div>\n        )}\n\n        <div>\n          Username\n          <Input\n            type=\"text\"\n            value={state.username}\n            onChange={handle.handleUsernameInput}\n          />\n        </div>\n        <div>\n          Password\n          <Input\n            type=\"password\"\n            value={state.password}\n            onChange={handle.handlePasswordInput}\n          />\n        </div>\n        <ErrorMessage>{state.errorMessage}</ErrorMessage>\n        <Button>submit</Button>\n      </Form>\n    </Container>\n  );\n}\n\nLoginForm.propTypes = {\n  state: PropTypes.object,\n  handle: PropTypes.object,\n};\n\nexport default memo(LoginForm);\n","import { useState, useContext, useCallback } from \"react\";\nimport { register, getMe } from \"../WebAPI\";\nimport { setAuthToken } from \"../utils\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context\";\n\nfunction useRegister() {\n  const { setUser } = useContext(AuthContext);\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"Lidemy\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setErrorMessage(null);\n\n    if (isLoading) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    register(nickname, username, password).then((data) => {\n      setIsLoading(false);\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.message);\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  const handleNicknameInput = useCallback((e) => {\n    setNickname(e.target.value);\n  }, []);\n\n  const handleUsernameInput = useCallback((e) => {\n    setUsername(e.target.value);\n  }, []);\n\n  const handlePasswordInput = useCallback((e) => {\n    setPassword(e.target.value);\n  }, []);\n\n  return {\n    nickname,\n    username,\n    password,\n    errorMessage,\n\n    handleSubmit,\n    handleNicknameInput,\n    handleUsernameInput,\n    handlePasswordInput,\n  };\n}\n\nexport default useRegister;\n","import LoginForm from \"../../components/LoginForm\";\nimport useRegister from \"../../customHooks/useRegister\";\n\nfunction RegisterPage() {\n  const {\n    nickname,\n    username,\n    password,\n    errorMessage,\n\n    handleSubmit,\n    handleNicknameInput,\n    handleUsernameInput,\n    handlePasswordInput,\n  } = useRegister();\n\n  const state = { nickname, username, password, errorMessage };\n  const handle = {\n    handleSubmit,\n    handleNicknameInput,\n    handleUsernameInput,\n    handlePasswordInput,\n  };\n\n  return <LoginForm state={state} handle={handle} />;\n}\n\nexport default RegisterPage;\n","import LoginForm from \"../../components/LoginForm\";\nimport useLogin from \"../../customHooks/useLogin\";\n\nfunction LoginPage() {\n  const {\n    username,\n    password,\n    errorMessage,\n\n    handleSubmit,\n    handleUsernameInput,\n    handlePasswordInput,\n  } = useLogin();\n\n  const state = { username, password, errorMessage };\n  const handle = { handleSubmit, handleUsernameInput, handlePasswordInput };\n\n  return <LoginForm state={state} handle={handle} />;\n}\n\nexport default LoginPage;\n","export default __webpack_public_path__ + \"static/media/banner.50d2ec5c.jpeg\";","export default __webpack_public_path__ + \"static/media/logo.02bae6b4.jpeg\";","import styled from \"styled-components\";\nimport banner from \"../../images/banner.jpeg\";\nimport logo from \"../../images/logo.jpeg\";\n\nconst Background = styled.div`\n  position: relative;\n  background-image: url(${banner});\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center;\n  background-size: cover;\n  height: calc(100vh - 100px);\n  width: 90%;\n  margin: auto;\n\n  @media screen and (max-width: 576px) {\n    height: 100vh;\n    margin: 100px auto 60px auto;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin: 100px auto 60px auto;\n  }\n`;\n\nconst InfoBackground = styled.div`\n  position: absolute;\n  max-width: 500px;\n  background: transparent;\n  top: 50%;\n  left: 40%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  font-family: \"Playfair Display\", serif;\n`;\n\nconst InfoContent = styled.div`\n  margin-top: 80px;\n  line-height: 2;\n  color: #440f00;\n  font-size: 20px;\n  text-align: center;\n\n  span {\n    font-weight: bold;\n  }\n\n  @media screen and (max-width: 576px) {\n    line-height: 1.5;\n    margin-top: 120px;\n  }\n`;\n\nconst Avatar = styled.img`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  position: absolute;\n  top: 0%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (max-width: 576px) {\n    margin: 50px 0;\n  }\n`;\n\nfunction AboutPage() {\n  return (\n    <Background>\n      <InfoBackground>\n        <Avatar src={logo} />\n        <InfoContent>\n          <span>Orange & Black</span> <br />\n          <span>Optimistic & Brave</span> <br />\n          <p>\n            We love when inspiring people share their stories on our site.{\" \"}\n            Although sharing and listening to stories makes us stop and reflect,\n            it can also lead to us thinking and acting differently.\n          </p>\n        </InfoContent>\n      </InfoBackground>\n    </Background>\n  );\n}\n\nexport default AboutPage;\n","import styled from \"styled-components\";\nimport Post from \"../../components/Post\";\nimport useGetPost from \"../../customHooks/useGetPosts\";\nimport { Link } from \"react-router-dom\";\n\nconst Root = styled.div``;\n\nconst PostList = styled.div`\n  width: 60%;\n  margin: 30px auto;\n  max-height: 80vh;\n  overflow: scroll;\n  padding: 30px 0;\n\n  @media screen and (max-width: 768px) {\n    margin: 100px auto;\n    width: 80%;\n  }\n`;\n\nconst Button = styled(Link)`\n  display: block;\n  width: 30%;\n  margin-bottom: 30px;\n  text-decoration: none;\n  text-align: center;\n  background: #ff8100;\n  color: white;\n  font-size: 18px;\n  padding: 12px;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n\n  @media screen and (max-width: 576px) {\n    width: 60%;\n  }\n`;\n\nfunction AdminPage() {\n  const { posts } = useGetPost();\n\n  return (\n    <Root>\n      <PostList>\n        <Button to={\"/new-post\"}>Add New Post</Button>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} />\n        ))}\n      </PostList>\n    </Root>\n  );\n}\n\nexport default AdminPage;\n","import { useState, useContext, useCallback, useEffect } from \"react\";\nimport { getComments, addComment } from \"../WebAPI\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context\";\nimport { useParams } from \"react-router-dom\";\nimport { checkLogin } from \"../utils\";\n\nfunction useComments() {\n  const { id } = useParams();\n  const { user } = useContext(AuthContext);\n  const [body, setBody] = useState(\"\");\n  const [comments, setcomments] = useState([]);\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    getComments(id).then((comments) => {\n      setcomments(comments);\n    });\n  }, [id, comments]);\n\n  const handleSubmit = (e) => {\n    if (!checkLogin(user)) {\n      history.push(\"/login\");\n    }\n    e.preventDefault();\n\n    setErrorMessage(null);\n\n    if (isLoading) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    const nickname = user.nickname;\n\n    if (body === \"\") {\n      return setErrorMessage(`Invalid request, \"body\" is required`);\n    }\n\n    addComment(id, nickname, body).then(() => {\n      setIsLoading(false);\n      setBody(\"\");\n    });\n  };\n\n  const handleBodyInput = useCallback((e) => {\n    setBody(e.target.value);\n  }, []);\n\n  return {\n    comments,\n    body,\n    errorMessage,\n\n    handleSubmit,\n    handleBodyInput,\n  };\n}\n\nexport default useComments;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nconst Form = styled.form`\n  font-size: 20px;\n`;\n\nconst Content = styled.textarea.attrs({\n  placeholder: \"Join the discussion...\",\n})`\n  width: 100%;\n  font-size: 16px;\n  padding: 12px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-bottom: 12px;\n`;\n\nconst Button = styled.button`\n  padding: 12px;\n  background: #ff8100;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n  float: right;\n\n  &:hover {\n    background: #ff8100;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nfunction CommentForm({ state, handle }) {\n  return (\n    <Form onSubmit={handle.handleSubmit}>\n      <div>\n        <Content\n          rows=\"5\"\n          value={state.body}\n          onChange={handle.handleBodyInput}\n        />\n      </div>\n      <ErrorMessage>{state.errorMessage}</ErrorMessage>\n      <Button>submit</Button>\n    </Form>\n  );\n}\n\nCommentForm.propTypes = {\n  state: PropTypes.object,\n  handle: PropTypes.object,\n};\n\nexport default memo(CommentForm);\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context\";\nimport { deleteComment } from \"../../WebAPI\";\n\nconst Container = styled.div`\n  border: 1px solid #ff8100;\n  padding: 8px 16px;\n  border-radius: 8px;\n\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nconst Head = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 10px;\n`;\n\nconst Author = styled.div`\n  font-size: 20px;\n\n  color: #ff8100;\n`;\nconst Time = styled.div`\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Body = styled.div`\n  display: flex;\n  flex-wrap: wrap-reverse;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 18px;\n`;\n\nconst Content = styled.div`\n  white-space: pre-line;\n  over-flow: hidden;\n  word-break: break-all;\n`;\n\nconst ButtonWrapper = styled.div`\n  text-align: right;\n  margin: 12px 0;\n`;\n\nconst Button = styled.button`\n  padding: 8px 4px;\n  background: transparent;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n\n  &:hover {\n    background: #ff8100;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nfunction Comment({ comment }) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Container>\n      <Head>\n        <Author>{comment.nickname}</Author>\n        <Time>\n          {new Date(comment.createdAt).toLocaleString(\"en\", { hour12: false })}\n        </Time>\n      </Head>\n      <Body>\n        <Content>{comment.body}</Content>\n        {user && user.nickname === comment.nickname && (\n          <ButtonWrapper>\n            <Button\n              onClick={() => {\n                deleteComment(comment.id);\n              }}\n            >\n              Delete\n            </Button>\n          </ButtonWrapper>\n        )}\n      </Body>\n    </Container>\n  );\n}\n\nComment.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default memo(Comment);\n","import styled from \"styled-components\";\nimport useGetPost from \"../../customHooks/useGetPosts\";\nimport useComments from \"../../customHooks/useComments\";\nimport CommentForm from \"../../components/CommentForm\";\nimport Comment from \"../../components/Comment\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context\";\n\nconst Root = styled.div``;\n\nconst Container = styled.div`\n  width: 50%;\n  margin: 100px auto;\n\n  @media screen and (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst PostTop = styled.div`\n  border-bottom: 1px solid #ff8100;\n  text-align: left;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 28px;\n  white-space: pre-wrap;\n  word-break: break-all;\n  color: #ff8100;\n`;\n\nconst PostInfo = styled.div`\n  margin-top: 12px;\n`;\n\nconst PostBody = styled.div`\n  font-size: 18px;\n  margin-top: 30px;\n  max-height: 60vh;\n  white-space: pre-line;\n  overflow: scroll;\n  word-break: break-all;\n`;\n\nconst Button = styled.button`\n  padding: 12px;\n  margin-top: 20px;\n  background: #ff8100;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n  float: right;\n`;\n\nconst CommentWrapper = styled.div`\n  margin: 150px 0 80px 0;\n  border-top: 1px solid #ff8100;\n`;\n\nconst CommentTitle = styled.h1``;\n\nconst CommentList = styled.div`\n  margin-top: 100px;\n`;\n\nfunction PostPage() {\n  const { post } = useGetPost();\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const {\n    comments,\n    body,\n    errorMessage,\n\n    handleSubmit,\n    handleBodyInput,\n  } = useComments();\n  const state = { comments, body, errorMessage };\n  const handle = { handleSubmit, handleBodyInput };\n\n  return (\n    <Root>\n      <Container>\n        <PostTop>\n          <PostTitle>{post.title}</PostTitle>\n          <PostInfo>\n            {new Date(post.createdAt).toLocaleString(\"en\", { hour12: false })}\n          </PostInfo>\n        </PostTop>\n        <PostBody>{post.body}</PostBody>\n        <Button\n          onClick={() => {\n            history.goBack();\n          }}\n        >\n          Back\n        </Button>\n        <CommentWrapper>\n          <CommentTitle>Comments</CommentTitle>\n          {!user && \"Please login to comment\"}\n          {user && <CommentForm state={state} handle={handle} />}\n\n          <CommentList>\n            {comments.map((comment) => (\n              <Comment key={comment.id} comment={comment}></Comment>\n            ))}\n          </CommentList>\n        </CommentWrapper>\n      </Container>\n    </Root>\n  );\n}\n\nexport default PostPage;\n","import { useState, useContext, useEffect, useCallback } from \"react\";\nimport { newPost } from \"../WebAPI\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context\";\nimport { checkLogin } from \"../utils\";\n\nfunction useAddPost() {\n  const { user } = useContext(AuthContext);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!checkLogin(user)) {\n      history.push(\"/\");\n    }\n  }, [history, user]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setErrorMessage(null);\n\n    if (isLoading) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    newPost(title, body).then((data) => {\n      setIsLoading(false);\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n\n      history.push(\"/\");\n    });\n  };\n\n  const handleTitleInput = useCallback((e) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleBodyInput = useCallback((e) => {\n    setBody(e.target.value);\n  }, []);\n\n  return {\n    title,\n    body,\n    errorMessage,\n\n    handleSubmit,\n    handleTitleInput,\n    handleBodyInput,\n  };\n}\n\nexport default useAddPost;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nconst Form = styled.form`\n  border: solid 3px #ff8100;\n  padding: 20px 40px 60px 40px;\n  max-width: 600px;\n  margin: 30px auto;\n  font-size: 20px;\n\n  @media screen and (max-width: 768px) {\n    margin: 100px auto;\n    overflow: hidden;\n  }\n`;\n\nconst Input = styled.input`\n  margin-bottom: 12px;\n  width: 100%;\n  font-size: 16px;\n  padding: 10px;\n`;\n\nconst Content = styled.textarea`\n  width: 100%;\n  font-size: 16px;\n  padding: 12px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-bottom: 12px;\n`;\n\nconst Button = styled.button`\n  padding: 12px;\n  background: #ff8100;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n  float: right;\n\n  &:hover {\n    background: #ff8100;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nfunction PostForm({ state, handle }) {\n  return (\n    <Form onSubmit={handle.handleSubmit}>\n      <div>\n        Title:{\" \"}\n        <Input\n          type=\"text\"\n          value={state.title}\n          onChange={handle.handleTitleInput}\n        />\n      </div>\n      <div>\n        Content:{\" \"}\n        <Content\n          rows=\"20\"\n          value={state.body}\n          onChange={handle.handleBodyInput}\n        />\n      </div>\n      <ErrorMessage>{state.errorMessage}</ErrorMessage>\n      <Button>submit</Button>\n    </Form>\n  );\n}\n\nPostForm.propTypes = {\n  state: PropTypes.object,\n  handle: PropTypes.object,\n};\n\nexport default memo(PostForm);\n","import useAddPost from \"../../customHooks/useAddPost\";\nimport PostForm from \"../../components/PostForm\";\n\nfunction NewPostPage() {\n  const {\n    title,\n    body,\n    errorMessage,\n\n    handleSubmit,\n    handleTitleInput,\n    handleBodyInput,\n  } = useAddPost();\n\n  const state = { title, body, errorMessage };\n  const handle = { handleSubmit, handleTitleInput, handleBodyInput };\n\n  return <PostForm state={state} handle={handle} />;\n}\n\nexport default NewPostPage;\n","import { useState, useContext, useEffect, useCallback } from \"react\";\nimport { editPost, getPost } from \"../WebAPI\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context\";\nimport { useParams } from \"react-router-dom\";\nimport { checkLogin } from \"../utils\";\n\nfunction useEditPost() {\n  const { id } = useParams();\n  const { user } = useContext(AuthContext);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!checkLogin(user)) {\n      history.push(\"/\");\n    }\n\n    getPost(id).then((post) => {\n      setTitle(post.title);\n      setBody(post.body);\n    });\n  }, [id, history, user]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setErrorMessage(null);\n\n    if (isLoading) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    editPost(id, title, body).then((data) => {\n      setIsLoading(false);\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n\n      history.push(\"/admin\");\n    });\n  };\n\n  const handleTitleInput = useCallback((e) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleBodyInput = useCallback((e) => {\n    setBody(e.target.value);\n  }, []);\n\n  return {\n    title,\n    body,\n    errorMessage,\n\n    handleSubmit,\n    handleTitleInput,\n    handleBodyInput,\n  };\n}\n\nexport default useEditPost;\n","import useEditPost from \"../../customHooks/useEditPost\";\nimport PostForm from \"../../components/PostForm\";\n\nfunction EditPostPage() {\n  const {\n    title,\n    body,\n    errorMessage,\n\n    handleSubmit,\n    handleTitleInput,\n    handleBodyInput,\n  } = useEditPost();\n\n  const state = { title, body, errorMessage };\n  const handle = { handleSubmit, handleTitleInput, handleBodyInput };\n\n  return <PostForm state={state} handle={handle} />;\n}\n\nexport default EditPostPage;\n","import styled from \"styled-components\";\nimport Post from \"../../components/Post\";\nimport useGetPost from \"../../customHooks/useGetPosts\";\n\nconst Root = styled.div``;\n\nconst PostList = styled.div`\n  width: 60%;\n  margin: 30px auto;\n  max-height: 80vh;\n  overflow: scroll;\n\n  @media screen and (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  font-size: 28px;\n  margin: 50px 0;\n\n  span {\n    font-weight: bold;\n    color: #ff8100;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin: 100px 0 50px 0;\n  }\n`;\n\nfunction AuthorPage() {\n  const { posts, author } = useGetPost();\n\n  return (\n    <Root>\n      <Title>\n        <span>{author}</span> 的所有文章\n      </Title>\n      <PostList>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} />\n        ))}\n      </PostList>\n    </Root>\n  );\n}\n\nexport default AuthorPage;\n","import styled from \"styled-components\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"../Navbar\";\nimport HomePage from \"../../pages/HomePage\";\nimport RegisterPage from \"../../pages/RegisterPage\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport AboutPage from \"../../pages/AboutPage\";\nimport AdminPage from \"../../pages/AdminPage\";\nimport PostPage from \"../../pages/PostPage\";\nimport NewPostPage from \"../../pages/NewPostPage\";\nimport EditPostPage from \"../../pages/EditPostPage\";\nimport AuthorPage from \"../../pages/AuthorPage\";\n\nimport { useState, useEffect } from \"react\";\nimport { AuthContext, LoadingContext, PageContext } from \"../../context\";\nimport { getMe } from \"../../WebAPI\";\nimport { getAuthToken } from \"../../utils\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (getAuthToken()) {\n      getMe().then((response) => {\n        setIsLoading(false);\n        if (response.ok) {\n          setUser(response.data);\n        }\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\n        <PageContext.Provider value={{ page, setPage }}>\n          <Root>\n            <Router>\n              <Navbar />\n              <Switch>\n                <Route exact path=\"/\">\n                  <HomePage />\n                </Route>\n                <Route exact path=\"/register\">\n                  <RegisterPage />\n                </Route>\n                <Route path=\"/login\">\n                  <LoginPage />\n                </Route>\n                <Route path=\"/post/:id\">\n                  <PostPage />\n                </Route>\n                <Route path=\"/new-post\">\n                  <NewPostPage />\n                </Route>\n                <Route path=\"/edit-post/:id\">\n                  <EditPostPage />\n                </Route>\n                <Route path=\"/about\">\n                  <AboutPage />\n                </Route>\n                <Route path=\"/admin\">\n                  <AdminPage />\n                </Route>\n                <Route path=\"/author/:id\">\n                  <AuthorPage />\n                </Route>\n              </Switch>\n            </Router>\n          </Root>\n        </PageContext.Provider>\n      </LoadingContext.Provider>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nconst Root = styled.div``;\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family:  \"Ubuntu\", sans-serif;\n    background: black;\n    color: white;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nReactDOM.render(\n  <Root>\n    <GlobalStyle />\n    <App />\n  </Root>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}